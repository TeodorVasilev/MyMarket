<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - My Application</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" href="/">MyMarket</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item">
                            <a class="nav-link text-light" asp-controller="Users" asp-action="Index">Табло</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-light" asp-controller="Users" asp-action="Index">Потребители</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-light" asp-controller="Announcements" asp-action="Index">Обяви</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-light" asp-controller="Admin" asp-action="Settings">Настройки</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link text-light" asp-controller="Home" asp-action="Index">Назад</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - MyMarket - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        //load child categories checkboxes for property creation
        $('body').on('change', '#parentCategories', function() {
        var selectedId = $(this).val();
    
            $.ajax({
                url: '/Categories/GetChildCategories?parentId' + selectedId,
                type: 'GET',
                data: { parentId: selectedId},
                success: function(response) {
                    console.log(response);
                    var childCategoriesDiv = $('#childCategories');
                    childCategoriesDiv.empty();
                    $.each(response, function(i, category) {
                        if (category.children && category.children.length > 0) {
                            var parentLabel = $('<label />', { text: category.name, style: 'font-weight: bold;'});
                            childCategoriesDiv.append(parentLabel);
                    
                            $.each(category.children, function(j, childCategory) {
                                var checkBox = $('<input />', { type: 'checkbox', id: 'cb' + childCategory.id, style: 'margin-right: 5px;'});
                                var label = $('<label />', { 'for': 'cb' + childCategory.id, text: childCategory.name });
                                var div = $('<div />', { style: 'padding-left: 20px;'});
                                div.append(checkBox);
                                div.append(label);
                                childCategoriesDiv.append(div);
                            });
                        } else {
                            var checkBox = $('<input />', { type: 'checkbox', id: 'cb' + category.id, style: 'margin-right: 5px;'});
                            var label = $('<label />', { 'for': 'cb' + category.id, text: category.name });
                            var div = $('<div />');
                            div.append(checkBox);
                            div.append(label);
                            childCategoriesDiv.append(div);
                        }
                    });
                }
            });
        });

        //load child categories select options for option creation // fix display of child categories
        $('body').on('change', '#option-parent-categories', function() {
        var selectedId = $(this).val();
    
            $.ajax({
                url: '/Categories/GetChildCategories?parentId' + selectedId,
                type: 'GET',
                data: { parentId: selectedId},
                success: function(response) {
                    var childCategoriesDiv = $('#child-categories');
                    childCategoriesDiv.empty();
                    var defOption = '<option>Изберете подкатегория</option>'
                    $('#child-categories').append(defOption);
                
                    function addOptions(categories, prefix) {
                        $.each(categories, function(i, category) {
                            var option;
                            if (category.children && category.children.length > 0) {
                                option = $('<option />', { value: category.id, text: prefix + category.name, disabled: 'disabled' });
                            } else {
                                option = $('<option />', { value: category.id, text: prefix + category.name });
                            }
                            $("#child-categories").append(option);
                       
                            if (category.children && category.children.length > 0) {
                                addOptions(category.children, prefix + "--");
                            }
                        });
                    }

                    addOptions(response, "");
                }
            });
        });

        //load properties related to selected category for option creation
        $('body').on('change', '#child-categories', function(){
            var selectedId = $(this).val();
            $.ajax({
                url: '/Properties/GetPropertiesByCategoryId?categoryId=' + selectedId,
                type: 'GET',
                success: function(response) {
                    var propertiesSelect  = $('#properties');
                    propertiesSelect.empty();
                    $.each(response, function(i, property) {
                        var option = $('<option />', {value: property.id, text: property.name});
                        $('#properties').append(option);
                    });
                }
            })
        })

        //load partial categories
        $(function () {
            $('.category-link').on('click', function(e) {
                e.preventDefault();
                var url = $(this).data('url');
                $('#partial-container').load(url);
            });
        });

        //load partial options
        $(function () {
            $('.option-link').on('click', function(e) {
                e.preventDefault();
                console.log('options');
                var url = $(this).data('url');
                $('#partial-container').load(url, function () {
                    $.ajax({
                        url: '/Categories/GetParentCategories',
                        type: 'GET',
                        success: function(response){
                            var parentCategoriesSelect = $('#option-parent-categories');
                                response.forEach(function(category){
                                var option = new Option( category.name, category.id);
                                parentCategoriesSelect.append($(option));
                            });
                        }
                    });
                });
            });
        });

        //load partial properties
        $(function () {
            $('.property-link').on('click', function(e) {
                e.preventDefault();
                var url = $(this).data('url');
                $('#partial-container').load(url, function () {
                    $.ajax({
                        url: '/Categories/GetParentCategories',
                        type: 'GET',
                        success: function(response){
                            var parentCategoriesSelect = $('#parentCategories');
                                response.forEach(function(category){
                                var option = new Option( category.name, category.id);
                                parentCategoriesSelect.append($(option));
                            });
                        }
                    });
                });
            });
        });

        //delete entry cat, props, options
        $('body').on('click', '.delete', function(e) {
            e.preventDefault();

            var controller = $(this).data('controller');
            var id = $(this).data('id');

            $.ajax({
                url: '/' + controller + '/Delete/' + id,
                type: 'POST',
                success: function(result) {
                    if (result.success) {
                        loadPartialView(controller);
                    }
                }
            });
        });

        //create cat, props, option
        $('body').on('submit', '.create', function(e) {
            e.preventDefault();

            var controller = $(this).data('controller');
            console.log(controller);
            var selectedCheckboxes = [];

            if (controller === 'Properties') {
                selectedCheckboxes = $('#childCategories input[type=checkbox]:checked').map(function() {
                return parseInt(this.id.replace('cb', ''), 10); 
                }).get();
            }

            var formData = $(this).serializeArray().reduce(function(obj, item) {
                obj[item.name] = item.value;
                return obj;
            }, {});

            console.log(JSON.stringify(formData));

            formData.CategoriesIds = selectedCheckboxes;

            $.ajax({
                url: '/' + controller + '/Create/',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(result){
                    if(result.success){
                        loadPartialView(controller);
                    }
                }
            })
        });

        //load partial after action
        function loadPartialView(controller) {
            $.ajax({
                url: '/' + controller + '/Index',
                type: 'GET',
                success: function(result) {
                    $('#partial-container').html(result);

                        $.ajax({
                        url: '/Categories/GetParentCategories',
                        type: 'GET',
                        success: function(response){
                            console.log('ajax');
                            console.log(response);
                            var parentCategoriesSelect = $('#parentCategories');
                                response.forEach(function(category){
                                var option = new Option( category.name, category.id);
                                parentCategoriesSelect.append($(option));
                            });
                        }
                    });
                }
            });
        }

        //search
        $(function () {
            $('body').on('submit', '#search', function (e) {
                e.preventDefault();

                var term = $('#search-term').val();
                var type = $('#search-type').val();

                $.ajax({
                    url: `/search/search?searchType=${type}`,
                    method: 'POST',
                    data: { term: term, type: type },
                    success: function (data) {
                        var payload = {};
                        payload[type] = data;

                        $.ajax({
                            url: `/${type}/${type}`,
                            method: 'POST',
                            data: payload,
                            success: function (partialView) {
                                $('#partial-container').html(partialView);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log(textStatus);
                            }
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
            });
        });
    </script>
</body>
</html>